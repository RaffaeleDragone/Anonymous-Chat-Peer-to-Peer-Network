/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unisa.p2p.gui;

import it.unisa.p2p.beans.Message;
import it.unisa.p2p.chat.AnonymousChatUser;

import it.unisa.p2p.interfaces.MessageListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;

/**
 *
 * @author raffaeledragone
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    
    
    ButtonGroup buttonGroupRooms = new ButtonGroup();
    HashMap<String, List<Message>> hmListMessages=new HashMap<>();
    String currentRoom=null;
    AnonymousChatUser peer;
    
    public MainFrame() {
        initComponents();
        activatePanelWriterMessages(false);
        
        this.setResizable(false);
    }

    public MainFrame(String master, int id) throws Exception {
        peer = new AnonymousChatUser(id, master, new MessageListenerImpl(id));
        initComponents();
        activatePanelWriterMessages(false);
        
        this.setResizable(false);
    }
    
    class MessageListenerImpl implements MessageListener{
            
            int peerid;

            public MessageListenerImpl(int peerid)
            {
                this.peerid=peerid;

            }
            public String parseMessage(Object obj) {
                Message msg= (Message) obj;
                if(msg!=null && msg.getRoomName()!=null){
                    if(hmListMessages.get(msg.getRoomName())!=null){
                        hmListMessages.get(msg.getRoomName()).add(msg);
                        if(msg.getRoomName().equalsIgnoreCase(currentRoom))
                            lstMessages.add(msg.toString());
                    }
                }
                
                return "ok";
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        roomsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnCreateRoom = new javax.swing.JButton();
        panelSubRooms = new javax.swing.JPanel();
        btnJoinRoom = new javax.swing.JButton();
        chatPanel = new javax.swing.JPanel();
        panelWrite = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        btnAllegato = new javax.swing.JButton();
        panelMessages = new javax.swing.JPanel();
        scrollPane1 = new java.awt.ScrollPane();
        lstMessages = new java.awt.List();
        panelIntestazioneRoom = new javax.swing.JPanel();
        btnLeaveRoom = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roomsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Your Rooms");

        btnCreateRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        btnCreateRoom.setBorder(null);
        btnCreateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateRoomActionPerformed(evt);
            }
        });

        panelSubRooms.setLayout(new java.awt.GridLayout(20, 0));

        btnJoinRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/join.png"))); // NOI18N
        btnJoinRoom.setBorder(null);
        btnJoinRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roomsPanelLayout = new javax.swing.GroupLayout(roomsPanel);
        roomsPanel.setLayout(roomsPanelLayout);
        roomsPanelLayout.setHorizontalGroup(
            roomsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsPanelLayout.createSequentialGroup()
                .addGroup(roomsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelSubRooms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(roomsPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(roomsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCreateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnJoinRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        roomsPanelLayout.setVerticalGroup(
            roomsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnJoinRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelSubRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        chatPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        jScrollPane1.setViewportView(txtMessage);

        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/send.png"))); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnAllegato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/allegato.png"))); // NOI18N
        btnAllegato.setText("Allegati");

        javax.swing.GroupLayout panelWriteLayout = new javax.swing.GroupLayout(panelWrite);
        panelWrite.setLayout(panelWriteLayout);
        panelWriteLayout.setHorizontalGroup(
            panelWriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWriteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelWriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAllegato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelWriteLayout.setVerticalGroup(
            panelWriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWriteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelWriteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelWriteLayout.createSequentialGroup()
                        .addComponent(btnSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAllegato))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        lstMessages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMessagesMouseClicked(evt);
            }
        });
        lstMessages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lstMessagesActionPerformed(evt);
            }
        });
        scrollPane1.add(lstMessages);

        javax.swing.GroupLayout panelMessagesLayout = new javax.swing.GroupLayout(panelMessages);
        panelMessages.setLayout(panelMessagesLayout);
        panelMessagesLayout.setHorizontalGroup(
            panelMessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMessagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelMessagesLayout.setVerticalGroup(
            panelMessagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMessagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
        );

        btnLeaveRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/leave.png"))); // NOI18N
        btnLeaveRoom.setText("Leave Room");
        btnLeaveRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelIntestazioneRoomLayout = new javax.swing.GroupLayout(panelIntestazioneRoom);
        panelIntestazioneRoom.setLayout(panelIntestazioneRoomLayout);
        panelIntestazioneRoomLayout.setHorizontalGroup(
            panelIntestazioneRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIntestazioneRoomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLeaveRoom)
                .addContainerGap(402, Short.MAX_VALUE))
        );
        panelIntestazioneRoomLayout.setVerticalGroup(
            panelIntestazioneRoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIntestazioneRoomLayout.createSequentialGroup()
                .addComponent(btnLeaveRoom)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(chatPanelLayout.createSequentialGroup()
                        .addGroup(chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelMessages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelIntestazioneRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(panelIntestazioneRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMessages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Chalkboard SE", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("P2P Anonymous Chat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(roomsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(chatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(roomsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String txt = txtMessage.getText();
        Message msg=new Message();
        msg.setType(0);
        msg.setRoomName(currentRoom);
        msg.setMsg(txt);
        lstMessages.add(msg.toString());
        hmListMessages.get(currentRoom).add(msg);
        txtMessage.setText("");
        peer.sendMessage(currentRoom, msg);
    }//GEN-LAST:event_btnSendActionPerformed

    private void lstMessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lstMessagesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lstMessagesActionPerformed

    private void lstMessagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMessagesMouseClicked
        
    }//GEN-LAST:event_lstMessagesMouseClicked

    private void btnCreateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateRoomActionPerformed
        String nameRoom= JOptionPane.showInputDialog("Please insert the name of room ");
        if(nameRoom!=null && !nameRoom.isEmpty()){
            
            if(peer.getMyChatList()!=null && peer.getMyChatList().contains(nameRoom)){
                JOptionPane.showMessageDialog(null, "Room already created");
            }else{
                boolean res = peer.createRoom(nameRoom);
                if(res){
                    peer.getMyChatList().add(nameRoom);

                    hmListMessages.put(nameRoom, new ArrayList<>());

                    JToggleButton btn = new JToggleButton(nameRoom);
                    ActionListener listener = new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            setFocusRoom(e.getActionCommand());
                        }
                    };
                    btn.addActionListener(listener);
                    buttonGroupRooms.add(btn);
                    panelSubRooms.add(btn);
                    panelSubRooms.revalidate();
                    panelSubRooms.repaint();
                }else{
                    JOptionPane.showMessageDialog(null, "Error during creation of room "+nameRoom);
                }
            }
        }
    }//GEN-LAST:event_btnCreateRoomActionPerformed

    private void btnLeaveRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveRoomActionPerformed
        boolean res = peer.leaveRoom(currentRoom);
        if(res){
            if (buttonGroupRooms != null && buttonGroupRooms.getElements() != null) {
                Collections.list(buttonGroupRooms.getElements()).stream().forEach((btn) -> {
                    if (btn.getText().equals(currentRoom)) {
                        peer.leaveNetworkWithoutNotify();
                        buttonGroupRooms.remove(btn);
                        panelSubRooms.remove(btn);
                        panelSubRooms.revalidate();
                        panelSubRooms.repaint();

                        hmListMessages.remove(currentRoom);
                        lstMessages.removeAll();
                        currentRoom = null;
                        activatePanelWriterMessages(false);
                    }

                });

            }
        }else{
            JOptionPane.showMessageDialog(null, "Error during leaving of room "+currentRoom);
        }
        
        
        
    }//GEN-LAST:event_btnLeaveRoomActionPerformed

    private void btnJoinRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinRoomActionPerformed
        //Code for join in room
        String nameRoom = JOptionPane.showInputDialog("Please insert the name of room ");
        if (nameRoom != null && !nameRoom.isEmpty()) {
            if (peer.getMyChatList() != null && peer.getMyChatList().contains(nameRoom)) {
                JOptionPane.showMessageDialog(null, "Room already created");
            } else {
                boolean res = peer.joinRoom(nameRoom);
                if (res) {
                    hmListMessages.put(nameRoom, new ArrayList<>());
                    JToggleButton btn = new JToggleButton(nameRoom);
                    ActionListener listener = new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            setFocusRoom(e.getActionCommand());
                        }
                    };
                    btn.addActionListener(listener);
                    buttonGroupRooms.add(btn);
                    panelSubRooms.add(btn);
                    panelSubRooms.revalidate();
                    panelSubRooms.repaint();

                } else {
                    JOptionPane.showMessageDialog(null, "Error during joining in room " + nameRoom);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Room name cannot be null " + nameRoom);
        }
    }//GEN-LAST:event_btnJoinRoomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame("127.0.0.1",1).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllegato;
    private javax.swing.JButton btnCreateRoom;
    private javax.swing.JButton btnJoinRoom;
    private javax.swing.JButton btnLeaveRoom;
    private javax.swing.JButton btnSend;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.List lstMessages;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelIntestazioneRoom;
    private javax.swing.JPanel panelMessages;
    private javax.swing.JPanel panelSubRooms;
    private javax.swing.JPanel panelWrite;
    private javax.swing.JPanel roomsPanel;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTextArea txtMessage;
    // End of variables declaration//GEN-END:variables



    private void activatePanelWriterMessages(boolean state) {
        txtMessage.setEnabled(state);
        panelMessages.setEnabled(state);
        btnAllegato.setEnabled(state);
        btnSend.setEnabled(state);
        btnLeaveRoom.setEnabled(state);
    }


    private void setFocusRoom(String roomName) {
        activatePanelWriterMessages(true);
        currentRoom=roomName;
        List<Message> lstMsg = hmListMessages.get(roomName);
        lstMessages.removeAll();
        for (Message msg : lstMsg) {
            lstMessages.add(msg.toString());
        }
    }
}
